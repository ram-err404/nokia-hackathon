apiVersion: v1
kind: ServiceAccount
metadata:
  name: internal-kubectl
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: modify-pods
  namespace: default
rules:
  - apiGroups: ["apps"]
    resources: ["*"]
    verbs: ["get", "watch", "list", "update", "create", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: internal-kubectl
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: internal-kubectl
  namespace: kube-system

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ingenious
  namespace: default
  labels:
    app: ingenious  # give as per service.yaml
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingenious # give as per service.yaml
  template:
    metadata:
      labels:
        app: ingenious
    spec:
      serviceAccountName: internal-kubectl
      containers:
      - name: ingenious
        image: ingenious:latest
        #image: go-service-with-metrics:latest
        imagePullPolicy: Never
        command: ["/app/ingenious"]
        ports:
        - containerPort: 8050 # use the same port ref values.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: ingenious
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 8050
      targetPort: 8050
  selector:
    app: ingenious
